[build-system]
requires = [
    "setuptools>=61.0", 
    "wheel", 
    "pip-system-certs",
]
build-backend = "setuptools.build_meta"

# Tell setuptools to use setup.py
[tool.setuptools]
py-modules = []

# Exclude models directory from package discovery
[tool.setuptools.packages.find]
include = ["SignalScribe*"]
exclude = ["models*", "_custom_build*", "custom_build*"]

[project]
name = "SignalScribe"
dynamic = ["version"]
description = "A tool for transcribing and processing audio signals"
readme = "README.md"
authors = [{ name = "Signals Rising" }]
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = ["audio", "transcription", "signal-processing"]
dependencies = [
    "watchdog",
    "rich",
    "pyyaml",
    "numpy",
    "psutil",
    "requests",
    "beautifulsoup4",
    "pywhispercpp @ git+https://github.com/signalsrising/pywhispercpp.git",
]
requires-python = ">=3.8"

[project.optional-dependencies]
dev = ["black", "pytest"]
auto = []  # Will trigger automatic detection
cuda = []  # For manual CUDA selection
vulkan = []  # For manual Vulkan selection
coreml = []  # For manual CoreML selection
cpu = []  # CPU-only version - pywhispercpp is now in main dependencies

[project.urls]
Homepage = "https://github.com/SignalsRising/SignalScribe"
"Bug Tracker" = "https://github.com/SignalsRising/SignalScribe/issues"

[project.scripts]
signalscribe = "SignalScribe.__main__:main"

[tool.setuptools.dynamic]
version = {attr = "SignalScribe.version.__version__"}

[tool.ruff]
line-length = 120

[tool.black]
line-length = 120
target-version = ['py38']  # Adjust based on your Python version
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
